version: '3.8'

services:
  # Aplicação Spring Boot
  app:
    build: .
    container_name: iot-city-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/iotcity
      - SPRING_DATASOURCE_USERNAME=iotcity_user
      - SPRING_DATASOURCE_PASSWORD=iotcity_pass
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      - db
    networks:
      - iot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: iot-city-db
    environment:
      - POSTGRES_DB=iotcity
      - POSTGRES_USER=iotcity_user
      - POSTGRES_PASSWORD=iotcity_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - iot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iotcity_user -d iotcity"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  iot-network:
    driver: bridge

volumes:
  postgres_data: 