services:
  app:
    build: .
    container_name: iot-city-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=bigdata
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/iotcity
      - SPRING_DATASOURCE_USERNAME=iotcity_user
      - SPRING_DATASOURCE_PASSWORD=iotcity_pass
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPARK_MASTER=spark://spark-master:7077
    depends_on:
      - db
      - kafka
      - spark-master
    networks:
      - iot-network
    restart: unless-stopped

  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: iot-city-db
    environment:
      - POSTGRES_DB=iotcity
      - POSTGRES_USER=iotcity_user
      - POSTGRES_PASSWORD=iotcity_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - iot-network
    restart: unless-stopped

  # Apache Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - iot-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - iot-network
    restart: unless-stopped

  # Apache Spark
  spark-master:
    image: bitnami/spark:3.5
    container_name: spark-master
    ports:
      - "8081:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - iot-network
    restart: unless-stopped

  spark-worker:
    image: bitnami/spark:3.5
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - iot-network
    restart: unless-stopped

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - iot-network
    restart: unless-stopped

networks:
  iot-network:
    driver: bridge

volumes:
  postgres_data: 